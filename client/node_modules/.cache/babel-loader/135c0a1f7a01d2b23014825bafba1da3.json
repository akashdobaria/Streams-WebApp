{"ast":null,"code":"import _classCallCheck from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      _this.props.editStream(_this.props.match.params.id, formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n\n      if (!this.props.stream) {\n        return \"Hello\";\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Edit a Stream\"), React.createElement(StreamForm, {\n        onSubmit: this.onSubmit,\n        initialValues: _.pick(this.props.stream, 'title', 'description'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  editStream: editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","_","fetchStream","editStream","StreamForm","StreamEdit","onSubmit","formValues","props","match","params","id","console","log","stream","pick","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,U;;;;;;;;;;;;;;;;;;UAKFC,Q,GAAW,UAACC,UAAD,EAAgB;AACvB,YAAKC,KAAL,CAAWL,UAAX,CAAsB,MAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AACH,K;;;;;;;wCANmB;AAChB,WAAKC,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;6BAMQ;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;;AACA,UAAI,CAAC,KAAKA,KAAL,CAAWM,MAAhB,EAAwB;AACpB,eAAO,OAAP;AACH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,UAAD;AACI,QAAA,QAAQ,EAAE,KAAKR,QADnB;AAEI,QAAA,aAAa,EAAGL,CAAC,CAACc,IAAF,CAAO,KAAKP,KAAL,CAAWM,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAQH;;;;EAtBoBf,KAAK,CAACiB,S;;AAyB/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AAAEL,IAAAA,MAAM,EAAGI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAX,GAAP;AACH,CAFD;;AAIA,eAAeX,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,UAAU,EAAVA;AAAf,CAAlB,CAAP,CAAsDE,UAAtD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = (formValues) => {\n        this.props.editStream(this.props.match.params.id, formValues);\n    }\n\n    render() {\n        console.log(this.props);\n        if (!this.props.stream) {\n            return \"Hello\";\n        }\n        return (\n            <div>\n                <h3>Edit a Stream</h3>\n                <StreamForm\n                    onSubmit={this.onSubmit}\n                    initialValues={ _.pick(this.props.stream, 'title', 'description') }/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream : state.streams[ownProps.match.params.id] };\n} \n\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}
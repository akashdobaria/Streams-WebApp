{"ast":null,"code":"import _classCallCheck from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-diom';\nimport { fetchStreams } from '../../actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderAdmin = function (stream) {\n      if (stream.userId === _this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          className: \"right floated content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          className: \"ui button negative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    };\n\n    _this.renderList = function () {\n      return _this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, _this.renderAdmin(stream), React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, stream.title, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, stream.description)));\n      });\n    };\n\n    _this.renderCreate = function () {\n      if (_this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/streams/new\",\n          className: \"button ui primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Create Stream\"));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \" Streams \"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    currentUserId: state.auth.userId,\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","renderAdmin","stream","userId","props","currentUserId","renderList","streams","map","id","title","description","renderCreate","isSignedIn","textAlign","Component","mapStateToProps","state","auth","Object","values"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,U;;;;;;;;;;;;;;;;;;UAKFC,W,GAAc,UAACC,MAAD,EAAY;AACtB,UAAIA,MAAM,CAACC,MAAP,KAAkB,MAAKC,KAAL,CAAWC,aAAjC,EAAgD;AAC5C,eACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADJ;AAUH;AACJ,K;;UAEDC,U,GAAa,YAAM;AACf,aAAO,MAAKF,KAAL,CAAWG,OAAX,CAAmBC,GAAnB,CAAuB,UAAAN,MAAM,EAAI;AACpC,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACO,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAKR,WAAL,CAAiBC,MAAjB,CADL,EAEI;AAAG,UAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,MAAM,CAACQ,KADZ,OACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADnB,EAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKR,MAAM,CAACS,WADZ,CAFJ,CAHJ,CADJ;AAYH,OAbM,CAAP;AAcH,K;;UAEDC,Y,GAAe,YAAM;AACjB,UAAI,MAAKR,KAAL,CAAWS,UAAf,EAA2B;AACvB,eACI;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAOH;AACJ,K;;;;;;;wCA9CmB;AAChB,WAAKV,KAAL,CAAWL,YAAX;AACH;;;6BA8CQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKO,UAAL,EAAjC,CAFJ,CADJ;AAMH;;;;EAxDoBV,KAAK,CAACmB,S;;AA2D/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHJ,IAAAA,UAAU,EAAEI,KAAK,CAACC,IAAN,CAAWL,UADpB;AAEHR,IAAAA,aAAa,EAAEY,KAAK,CAACC,IAAN,CAAWf,MAFvB;AAGHI,IAAAA,OAAO,EAAEY,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACV,OAApB;AAHN,GAAP;AAKH,CAND;;AASA,eAAeV,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA,YAAY,EAAZA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'; \nimport { Link } from 'react-router-diom';\n\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderAdmin = (stream) => {\n        if (stream.userId === this.props.currentUserId) {\n            return (\n                <div className=\"right floated content\">\n                    <button className=\"ui button primary\">\n                        Edit\n                    </button>\n                    <button className=\"ui button negative\">\n                        Delete\n                    </button>\n                </div>\n            );\n        }\n    };\n\n    renderList = () => {\n        return this.props.streams.map(stream => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className=\"large middle aligned icon camera\" />\n                    <div className=\"content\">\n                        {stream.title} <br />\n                        <div className=\"description\">\n                            {stream.description}\n                        </div>\n                    </div>\n                </div>\n            )\n        });\n    };\n\n    renderCreate = () => {\n        if (this.props.isSignedIn) {\n            return (\n                <div style={{ textAlign: 'right' }}>\n                    <Link to=\"/streams/new\" className=\"button ui primary\">\n                        Create Stream\n                    </Link>\n                </div>\n            )\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h2> Streams </h2>\n                <div className=\"ui celled list\">{this.renderList()}</div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isSignedIn: state.auth.isSignedIn,\n        currentUserId: state.auth.userId,\n        streams: Object.values(state.streams)\n    };\n}\n\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}
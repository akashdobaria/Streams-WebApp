{"ast":null,"code":"import _classCallCheck from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\n\nvar StreamDelete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamDelete, _React$Component);\n\n  function StreamDelete() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamDelete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamDelete)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderContent = function () {\n      if (!_this.props.stream) {\n        return 'Are you sure you want to delete this stream?';\n      }\n\n      return \"Are you sure you want to delete the stream with title: \".concat(_this.props.stream.title);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamDelete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button negative\",\n        onClick: function onClick() {\n          return _this2.props.deleteStream(_this2.props.match.params.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Link, {\n        className: \"ui button\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Cancel\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        title: \"Delete Stream \".concat(this.props.match.params.id),\n        content: this.renderContent(),\n        actions: this.renderActions(),\n        onDismiss: function onDismiss() {\n          return history.push('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return StreamDelete;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  deleteStream: deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Link","Modal","history","fetchStream","deleteStream","StreamDelete","renderContent","props","stream","title","match","params","id","renderActions","push","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;;IAEMC,Y;;;;;;;;;;;;;;;;;;UAcFC,a,GAAgB,YAAM;AAClB,UAAI,CAAC,MAAKC,KAAL,CAAWC,MAAhB,EAAwB;AACpB,eAAO,8CAAP;AACH;;AAED,8EAAiE,MAAKD,KAAL,CAAWC,MAAX,CAAkBC,KAAnF;AACH,K;;;;;;;wCAnBmB;AAChB,WAAKF,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;oCAEe;AAAA;;AACZ,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAuC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACL,KAAL,CAAWH,YAAX,CAAwB,MAAI,CAACG,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD,CAAN;AAAA,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ;AAMH;;;6BAUQ;AACL,aACI,oBAAC,KAAD;AACI,QAAA,KAAK,0BAAmB,KAAKL,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3C,CADT;AAEI,QAAA,OAAO,EAAE,KAAKN,aAAL,EAFb;AAGI,QAAA,OAAO,EAAE,KAAKO,aAAL,EAHb;AAII,QAAA,SAAS,EAAE;AAAA,iBAAMX,OAAO,CAACY,IAAR,CAAa,GAAb,CAAN;AAAA,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQH;;;;EA/BsBhB,KAAK,CAACiB,S;;AAmCjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AAAEV,IAAAA,MAAM,EAAES,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeb,OAAO,CAACiB,eAAD,EAAkB;AAAEb,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,YAAY,EAAZA;AAAf,CAAlB,CAAP,CAAwDC,YAAxD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\n\nclass StreamDelete extends React.Component{\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    renderActions() {\n        return (\n            <React.Fragment>\n                <button className=\"ui button negative\" onClick={() => this.props.deleteStream(this.props.match.params.id)} >Delete</button>\n                <Link className=\"ui button\" to=\"/\" >Cancel</Link>\n            </React.Fragment>\n        );\n    }\n\n    renderContent = () => {\n        if (!this.props.stream) {\n            return 'Are you sure you want to delete this stream?';\n        }\n\n        return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\n    }\n    \n    render() {\n        return (\n            <Modal\n                title={`Delete Stream ${this.props.match.params.id}`}\n                content={this.renderContent()}\n                actions={this.renderActions()}\n                onDismiss={() => history.push('/')}\n            />\n        );\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);"]},"metadata":{},"sourceType":"module"}
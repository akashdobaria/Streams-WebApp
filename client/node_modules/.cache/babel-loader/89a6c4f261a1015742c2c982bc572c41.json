{"ast":null,"code":"import _classCallCheck from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    _classCallCheck(this, StreamCreate);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamCreate).apply(this, arguments));\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"renderInput\",\n    value: function renderInput(formProps) {\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, formProps.label), React.createElement(\"input\", Object.assign({}, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formValues) {\n      console.log(formValues);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  errors = {};\n\n  if (!formValues.title) {//only if there's no title\n  }\n\n  if (!formValues.description) {//only if there's no description\n  }\n};\n\nexport default reduxForm({\n  form: 'StreamCreate'\n})(StreamCreate);","map":{"version":3,"sources":["/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","formProps","label","input","formValues","console","log","props","handleSubmit","onSubmit","renderInput","Component","validate","errors","title","description","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;IAEMC,Y;;;;;;;;;;;;;gCACUC,S,EAAW;AACnB,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQA,SAAS,CAACC,KAAlB,CADJ,EAEI,+CAAWD,SAAS,CAACE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CADJ;AAOH;;;6BAEQC,U,EAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH;;;6BAEO;AACJ,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWC,YAAX,CAAwB,KAAKC,QAA7B,CAAhB;AAAwD,QAAA,SAAS,EAAC,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAE,KAAKC,WAApC;AAAiD,QAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,QAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADJ;AAOH;;;;EAvBsBb,KAAK,CAACc,S;;AA0BjC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACR,UAAD,EAAgB;AAC7BS,EAAAA,MAAM,GAAG,EAAT;;AAEA,MAAI,CAACT,UAAU,CAACU,KAAhB,EAAuB,CACnB;AACH;;AAED,MAAI,CAACV,UAAU,CAACW,WAAhB,EAA6B,CACzB;AACH;AACJ,CAVD;;AAYA,eAAehB,SAAS,CAAC;AACrBiB,EAAAA,IAAI,EAAE;AADe,CAAD,CAAT,CAEZhB,YAFY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n    renderInput(formProps) {\n        return (\n            <div className='field'>\n                <label>{formProps.label}</label>\n                <input {...formProps.input} />\n            </div>\n           \n        );\n    }\n\n    onSubmit(formValues) {\n        console.log(formValues);\n    }\n\n    render(){\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className='ui form'>\n                <Field name='title' component={this.renderInput} label='Enter Title'/>\n                <Field name='description' component={this.renderInput} label='Enter Description'/>\n                <button className='ui button primary'>Submit</button>\n            </form>\n        );\n    } \n}\n\nconst validate = (formValues) => {\n    errors = {}\n    \n    if (!formValues.title) {\n        //only if there's no title\n    }\n\n    if (!formValues.description) {\n        //only if there's no description\n    }\n}\n\nexport default reduxForm({\n    form: 'StreamCreate'\n})(StreamCreate);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStreams } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      _this.props.createStreams(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(StreamForm, {\n        onSubmit: onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    //only if there's no title\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    //only if there's no description\n    errors.description = \"You must enter some description\";\n  }\n\n  return errors;\n};\n\nvar formWrapped = reduxForm({\n  form: 'StreamCreate',\n  validate: validate\n})(StreamCreate);\nexport default connect(null, {\n  createStreams: createStreams\n})(formWrapped);","map":{"version":3,"sources":["/Users/akashdobaria/Desktop/opendatagroup/learning/streams/client/src/components/streams/StreamCreate.js"],"names":["React","connect","createStreams","StreamForm","StreamCreate","onSubmit","formValues","props","Component","validate","errors","title","description","formWrapped","reduxForm","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,Y;;;;;;;;;;;;;;;;;;UACFC,Q,GAAW,UAACC,UAAD,EAAgB;AACvB,YAAKC,KAAL,CAAWL,aAAX,CAAyBI,UAAzB;AACH,K;;;;;;;6BAEO;AACJ,aACI,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAED,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EATsBL,KAAK,CAACQ,S;;AAYjC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACH,UAAD,EAAgB;AAC7B,MAAMI,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACJ,UAAU,CAACK,KAAhB,EAAuB;AACnB;AACAD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACH;;AAED,MAAI,CAACL,UAAU,CAACM,WAAhB,EAA6B;AACzB;AACAF,IAAAA,MAAM,CAACE,WAAP,GAAqB,iCAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAdD;;AAgBA,IAAMG,WAAW,GAAIC,SAAS,CAAC;AAC3BC,EAAAA,IAAI,EAAE,cADqB;AAE3BN,EAAAA,QAAQ,EAARA;AAF2B,CAAD,CAAT,CAGlBL,YAHkB,CAArB;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,aAAa,EAAbA;AAAF,CAAP,CAAP,CAAiCW,WAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStreams } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n    onSubmit = (formValues) => {\n        this.props.createStreams(formValues);\n    }\n\n    render(){\n        return (\n            <StreamForm onSubmit={onSubmit} />\n        );\n    } \n}\n\nconst validate = (formValues) => {\n    const errors = {};\n\n    if (!formValues.title) {\n        //only if there's no title\n        errors.title = \"You must enter a title\";\n    }\n\n    if (!formValues.description) {\n        //only if there's no description\n        errors.description = \"You must enter some description\";\n    }\n\n    return errors\n};\n\nconst formWrapped =  reduxForm({\n    form: 'StreamCreate',\n    validate\n})(StreamCreate);\n\nexport default connect(null, { createStreams })(formWrapped);"]},"metadata":{},"sourceType":"module"}